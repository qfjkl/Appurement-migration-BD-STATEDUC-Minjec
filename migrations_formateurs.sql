-- =============================================
-- SCHEMA FACTORISATION FORMATEURS (miroir apprenants)
-- =============================================

-- Table de dimension des formateurs (pour le groupement)
IF OBJECT_ID('DIMENSION_FORMATEUR') IS NULL
BEGIN
CREATE TABLE DIMENSION_FORMATEUR (
    CODE_DIMENSION_FORMATEUR        INT IDENTITY(1,1) NOT NULL,
    CODE_CENTRE_DELEGATION          INT NOT NULL,
    CODE_TYPE_ANNEE                 TINYINT NOT NULL,

    -- Axes optionnels (255 = non applicable)
    CODE_TYPE_SPECIALITE            TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_AGE                   TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_DIPL_ACAD_CATEGORIE   TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_DIPL_PRO_CATEGORIE    TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_FONCTION              TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_POSITION              TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_GRADE                 TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_STATUT_MATRIMONIALE   TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_STATUT_PERS           TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_PERSONNEL             TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_CATEGORIE_PERSONNEL   TINYINT NOT NULL DEFAULT 255,
    CODE_TYPE_DIPLOME_ACAD          TINYINT NOT NULL DEFAULT 255,
    DATE_CREATION DATETIME2 DEFAULT GETDATE(),
    DATE_MODIFICATION DATETIME2 DEFAULT GETDATE(),

    CONSTRAINT UQ_DIMENSION_FORMATEUR UNIQUE (CODE_DIMENSION_FORMATEUR),

    CONSTRAINT FK_CENTRE_DELEGATION FOREIGN KEY (CODE_CENTRE_DELEGATION)
        REFERENCES CENTRE_DELEGATION (CODE_CENTRE_DELEGATION),

    CONSTRAINT FK_TYPE_ANNEE FOREIGN KEY (CODE_TYPE_ANNEE)
        REFERENCES TYPE_ANNEE (CODE_TYPE_ANNEE),

    CONSTRAINT FK_TYPE_SPECIALITE FOREIGN KEY (CODE_TYPE_SPECIALITE)
        REFERENCES TYPE_SPECIALITE (CODE_TYPE_SPECIALITE),

    CONSTRAINT FK_TYPE_AGE FOREIGN KEY (CODE_TYPE_AGE)
        REFERENCES TYPE_AGE (CODE_TYPE_AGE),

    CONSTRAINT FK_TYPE_DIPL_ACAD_CATEGORIE FOREIGN KEY (CODE_TYPE_DIPL_ACAD_CATEGORIE)
        REFERENCES TYPE_DIPL_ACAD_CATEGORIE (CODE_TYPE_DIPL_ACAD_CATEGORIE),

    CONSTRAINT FK_TYPE_FONCTION FOREIGN KEY (CODE_TYPE_FONCTION)
        REFERENCES TYPE_FONCTION (CODE_TYPE_FONCTION),

    CONSTRAINT FK_TYPE_POSITION FOREIGN KEY (CODE_TYPE_POSITION)
        REFERENCES TYPE_POSITION (CODE_TYPE_POSITION),

    CONSTRAINT FK_TYPE_GRADE FOREIGN KEY (CODE_TYPE_GRADE)
        REFERENCES TYPE_GRADE (CODE_TYPE_GRADE),

    CONSTRAINT FK_TYPE_STATUT_MATRIMONIALE FOREIGN KEY (CODE_TYPE_STATUT_MATRIMONIALE)
        REFERENCES TYPE_STATUT_MATRIMONIALE (CODE_TYPE_STATUT_MATRIMONIALE),

    CONSTRAINT FK_TYPE_STATUT_PERS FOREIGN KEY (CODE_TYPE_STATUT_PERS)
        REFERENCES TYPE_STATUT_PERS (CODE_TYPE_STATUT_PERS),

    CONSTRAINT FK_TYPE_PERSONNEL FOREIGN KEY (CODE_TYPE_PERSONNEL)
        REFERENCES TYPE_PERSONNEL (CODE_TYPE_PERSONNEL),

    CONSTRAINT FK_TYPE_CATEGORIE_PERSONNEL FOREIGN KEY (CODE_TYPE_CATEGORIE_PERSONNEL)
        REFERENCES TYPE_CATEGORIE_PERSONNEL (CODE_TYPE_CATEGORIE_PERSONNEL),

    CONSTRAINT FK_TYPE_DIPLOME_ACAD FOREIGN KEY (CODE_TYPE_DIPLOME_ACAD)
        REFERENCES TYPE_DIPLOME_ACAD (CODE_TYPE_DIPLOME_ACAD),


    CONSTRAINT PK_DIMENSION_FORMATEUR PRIMARY KEY (
      CODE_CENTRE_DELEGATION,
      CODE_TYPE_ANNEE,
      CODE_TYPE_SPECIALITE,
      CODE_TYPE_AGE,
      CODE_TYPE_DIPL_ACAD_CATEGORIE,
      CODE_TYPE_DIPL_PRO_CATEGORIE,
      CODE_TYPE_FONCTION,
      CODE_TYPE_POSITION,
      CODE_TYPE_GRADE,
      CODE_TYPE_STATUT_MATRIMONIALE,
      CODE_TYPE_STATUT_PERS,
      CODE_TYPE_PERSONNEL,
      CODE_TYPE_CATEGORIE_PERSONNEL,
      CODE_TYPE_DIPLOME_ACAD
    )
);
END
GO

-- Table des détails individuels du personnel
IF OBJECT_ID('PERSONNEL_DETAILS') IS NULL
BEGIN
CREATE TABLE PERSONNEL_DETAILS (
    CODE_PERSONNEL_DETAILS          BINARY(32) NOT NULL PRIMARY KEY, -- SHA-256 hash of concatenated dimension fields
    ID_PERSONNEL                    INT NOT NULL,
    
    -- Détails personnels
    MATRICULE_PERSONNEL             NVARCHAR(50) NULL,
    NOM_PERSONNEL                   NVARCHAR(100) NULL,
    PRENOMS_PERSONNEL               NVARCHAR(200) NULL,
    DATE_OU_ANNEE_NAISS_PERS        NVARCHAR(50) NULL,
    ARRONDISSEMENT_ORIGINE          NVARCHAR(100) NULL,
    TELEPHONE_PERS                  NVARCHAR(20) NULL,
    
    -- Informations professionnelles
    ANNEE_1ERE_PRISE_SERVICE        INT NULL,
    EFP_OU_DATE_RECRUTEMENT         NVARCHAR(50) NULL,
    ANNEE_AFFECTATION               INT NULL,
    NUM_ORDRE_PERS                  INT NULL,
    CATEGORIE_PERS                  NVARCHAR(100) NULL,
    FORMATEUR_Y_N                   NVARCHAR(10) NULL,
    ANCIENNETE_POSTE                INT NULL,
    ENTREE_FONCTION_PUBLIQUE        NVARCHAR(50) NULL,
    POSTE_RESPONSABILITE_Y_N        NVARCHAR(10) NULL,
    
    -- Détails supplémentaires
    AUTRE_FONCTION                  NVARCHAR(200) NULL,
    AUTRE_GRADE                     NVARCHAR(200) NULL,
    DISCIPLINE_ENSEIGNEE            NVARCHAR(200) NULL,
    AUTRE_DIPLOME_PRO               NVARCHAR(200) NULL,
    AUTRE_DIPLOME_ACAD              NVARCHAR(200) NULL,
    FONCTION                        NVARCHAR(200) NULL,

    
    DATE_CREATION DATETIME2 DEFAULT GETDATE(),
    DATE_MODIFICATION DATETIME2 DEFAULT GETDATE()
);
END
GO

-- Table des types d'effectifs formateurs
IF OBJECT_ID('TYPE_EFFECTIFS_FORMATEURS') IS NULL
BEGIN
CREATE TABLE TYPE_EFFECTIFS_FORMATEURS (
    CODE_TYPE_EFFECTIFS_FORMATEURS TINYINT NOT NULL PRIMARY KEY,
    LIBELLE_TYPE_EFFECTIFS_FORMATEURS NVARCHAR(200) NOT NULL UNIQUE
);
END
GO

-- Table des effectifs formateurs
IF OBJECT_ID('EFFECTIFS_FORMATEURS') IS NULL
BEGIN
CREATE TABLE EFFECTIFS_FORMATEURS (
    CODE_EFFECTIFS_FORMATEURS       INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
    CODE_DIMENSION_FORMATEUR        INT NOT NULL,
    CODE_PERSONNEL_DETAILS          BINARY(32) NULL,
    CODE_TYPE_EFFECTIFS_FORMATEURS  TINYINT NOT NULL,

    NB_FORM_G INT NOT NULL,
    NB_FORM_F INT NOT NULL,
    NB_FORM_T INT NOT NULL,
    ESTIMATION TINYINT NULL,
    
    CONSTRAINT FK_FORMATEURS_DIMENSION FOREIGN KEY (CODE_DIMENSION_FORMATEUR)
        REFERENCES DIMENSION_FORMATEUR (CODE_DIMENSION_FORMATEUR),

    CONSTRAINT FK_FORMATEURS_TYPE FOREIGN KEY (CODE_TYPE_EFFECTIFS_FORMATEURS)
        REFERENCES TYPE_EFFECTIFS_FORMATEURS (CODE_TYPE_EFFECTIFS_FORMATEURS),

    CONSTRAINT FK_PERSONNEL_DETAILS_HASH FOREIGN KEY (CODE_PERSONNEL_DETAILS)
        REFERENCES PERSONNEL_DETAILS (CODE_PERSONNEL_DETAILS)
);
END
GO

-- Seed types formateurs
MERGE TYPE_EFFECTIFS_FORMATEURS AS t
USING (
  VALUES
  (1, N'Besoins formateurs - Spécialité'),
  (2, N'Effectifs formateurs - Âge'),
  (3, N'Effectifs formateurs - Diplôme académique (catégorie)'),
  (4, N'Effectifs formateurs - Diplôme professionnel (catégorie)'),
  (5, N'Effectifs formateur && personnel - Détails individuels')
) AS s (CODE_TYPE_EFFECTIFS_FORMATEURS, LIBELLE_TYPE_EFFECTIFS_FORMATEURS)
ON t.CODE_TYPE_EFFECTIFS_FORMATEURS = s.CODE_TYPE_EFFECTIFS_FORMATEURS
WHEN NOT MATCHED THEN INSERT (CODE_TYPE_EFFECTIFS_FORMATEURS, LIBELLE_TYPE_EFFECTIFS_FORMATEURS)
VALUES (s.CODE_TYPE_EFFECTIFS_FORMATEURS, s.LIBELLE_TYPE_EFFECTIFS_FORMATEURS)
WHEN MATCHED AND t.LIBELLE_TYPE_EFFECTIFS_FORMATEURS <> s.LIBELLE_TYPE_EFFECTIFS_FORMATEURS THEN
UPDATE SET t.LIBELLE_TYPE_EFFECTIFS_FORMATEURS = s.LIBELLE_TYPE_EFFECTIFS_FORMATEURS;
GO


-- INSERT INTO TYPE_CATEGORIE_PERSONNEL (CODE_TYPE_CATEGORIE_PERSONNEL, LIBELLE_TYPE_CATEGORIE_PERSONNEL, ORDRE_TYPE_CATEGORIE_PERSONNEL)
-- VALUES (255, N'', 255)
-- =============================================
-- MIGRATIONS FACTORISÉES FORMATEURS
-- =============================================

-- 1) BESOIN_FORMATEUR (besoins totaux par spécialité)
INSERT INTO DIMENSION_FORMATEUR (
    CODE_CENTRE_DELEGATION, CODE_TYPE_ANNEE,
    CODE_TYPE_SPECIALITE, CODE_TYPE_AGE, CODE_TYPE_DIPL_ACAD_CATEGORIE,
    CODE_TYPE_DIPL_PRO_CATEGORIE, CODE_TYPE_FONCTION, CODE_TYPE_POSITION,
    CODE_TYPE_GRADE, CODE_TYPE_STATUT_MATRIMONIALE, CODE_TYPE_STATUT_PERS,
    CODE_TYPE_PERSONNEL, CODE_TYPE_CATEGORIE_PERSONNEL, CODE_TYPE_DIPLOME_ACAD
)
SELECT DISTINCT
    s.CODE_CENTRE_DELEGATION,
    s.CODE_TYPE_ANNEE,
    s.CODE_TYPE_SPECIALITE,
    255, 255,
    255, 255, 255,
    255, 255, 255,
    255, 255, 255
FROM [BASE_SIGE_MINJEC].[dbo].[BESOIN_FORMATEUR] s
WHERE NOT EXISTS (
    SELECT 1 FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_SPECIALITE,255) = ISNULL(s.CODE_TYPE_SPECIALITE,255)
      AND ISNULL(d.CODE_TYPE_AGE,255) = 255
      AND ISNULL(d.CODE_TYPE_DIPL_ACAD_CATEGORIE,255) = 255
      AND ISNULL(d.CODE_TYPE_DIPL_PRO_CATEGORIE,255) = 255
      AND ISNULL(d.CODE_TYPE_FONCTION,255) = 255
      AND ISNULL(d.CODE_TYPE_POSITION,255) = 255
      AND ISNULL(d.CODE_TYPE_GRADE,255) = 255
      AND ISNULL(d.CODE_TYPE_STATUT_MATRIMONIALE,255) = 255
      AND ISNULL(d.CODE_TYPE_STATUT_PERS,255) = 255
      AND ISNULL(d.CODE_TYPE_PERSONNEL,255) = 255
      AND ISNULL(d.CODE_TYPE_CATEGORIE_PERSONNEL,255) = 255
      AND ISNULL(d.CODE_TYPE_DIPLOME_ACAD,255) = 255
);

INSERT INTO EFFECTIFS_FORMATEURS (CODE_DIMENSION_FORMATEUR, CODE_TYPE_EFFECTIFS_FORMATEURS, CODE_PERSONNEL_DETAILS, NB_FORM_G, NB_FORM_F, NB_FORM_T, ESTIMATION)
SELECT d.CODE_DIMENSION_FORMATEUR, 1, NULL, 0, 0,
       COALESCE(s.NB_BESOIN_FORMATEUR,0),
       CAST(ISNULL(s.ESTIMATION,0) AS TINYINT)
FROM [BASE_SIGE_MINJEC].[dbo].[BESOIN_FORMATEUR] s
CROSS APPLY (
    SELECT CODE_DIMENSION_FORMATEUR FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_SPECIALITE,255) = ISNULL(s.CODE_TYPE_SPECIALITE,255)
      AND ISNULL(d.CODE_TYPE_AGE,255) = 255
) d;

-- 2) FORMATEUR_AGE
INSERT INTO DIMENSION_FORMATEUR (
    CODE_CENTRE_DELEGATION, CODE_TYPE_ANNEE,
    CODE_TYPE_SPECIALITE, CODE_TYPE_AGE, CODE_TYPE_DIPL_ACAD_CATEGORIE,
    CODE_TYPE_DIPL_PRO_CATEGORIE, CODE_TYPE_FONCTION, CODE_TYPE_POSITION,
    CODE_TYPE_GRADE, CODE_TYPE_STATUT_MATRIMONIALE, CODE_TYPE_STATUT_PERS,
    CODE_TYPE_PERSONNEL, CODE_TYPE_CATEGORIE_PERSONNEL, CODE_TYPE_DIPLOME_ACAD
)
SELECT DISTINCT
    s.CODE_CENTRE_DELEGATION,
    s.CODE_TYPE_ANNEE,
    255,
    s.CODE_TYPE_AGE,
    255, 255, 255, 255, 255, 255, 255,
    255, 255, 255
FROM [BASE_SIGE_MINJEC].[dbo].[FORMATEUR_AGE] s
WHERE NOT EXISTS (
    SELECT 1 FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_SPECIALITE,255) = 255
      AND ISNULL(d.CODE_TYPE_AGE,255) = ISNULL(s.CODE_TYPE_AGE,255)
      AND ISNULL(d.CODE_TYPE_DIPL_ACAD_CATEGORIE,255) = 255
      AND ISNULL(d.CODE_TYPE_DIPL_PRO_CATEGORIE,255) = 255
      AND ISNULL(d.CODE_TYPE_FONCTION,255) = 255
      AND ISNULL(d.CODE_TYPE_POSITION,255) = 255
      AND ISNULL(d.CODE_TYPE_GRADE,255) = 255
      AND ISNULL(d.CODE_TYPE_STATUT_MATRIMONIALE,255) = 255
      AND ISNULL(d.CODE_TYPE_STATUT_PERS,255) = 255
      AND ISNULL(d.CODE_TYPE_PERSONNEL,255) = 255
      AND ISNULL(d.CODE_TYPE_CATEGORIE_PERSONNEL,255) = 255
      AND ISNULL(d.CODE_TYPE_DIPLOME_ACAD,255) = 255
);

INSERT INTO EFFECTIFS_FORMATEURS (CODE_DIMENSION_FORMATEUR, CODE_TYPE_EFFECTIFS_FORMATEURS, CODE_PERSONNEL_DETAILS, NB_FORM_G, NB_FORM_F, NB_FORM_T, ESTIMATION)
SELECT d.CODE_DIMENSION_FORMATEUR, 2, NULL,
       COALESCE(s.NB_FORM_H,0),
       COALESCE(s.NB_FORM_F,0),
       COALESCE(s.NB_FORM_T, COALESCE(s.NB_FORM_H,0)+COALESCE(s.NB_FORM_F,0)),
       CAST(0 AS TINYINT)
FROM [BASE_SIGE_MINJEC].[dbo].[FORMATEUR_AGE] s
CROSS APPLY (
    SELECT CODE_DIMENSION_FORMATEUR FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_AGE,255) = ISNULL(s.CODE_TYPE_AGE,255)
) d;

-- 3) FORMATEURS_DIPLOME_ACAD
INSERT INTO DIMENSION_FORMATEUR (
    CODE_CENTRE_DELEGATION, CODE_TYPE_ANNEE,
    CODE_TYPE_SPECIALITE, CODE_TYPE_AGE, CODE_TYPE_DIPL_ACAD_CATEGORIE,
    CODE_TYPE_DIPL_PRO_CATEGORIE, CODE_TYPE_FONCTION, CODE_TYPE_POSITION,
    CODE_TYPE_GRADE, CODE_TYPE_STATUT_MATRIMONIALE, CODE_TYPE_STATUT_PERS,
    CODE_TYPE_PERSONNEL, CODE_TYPE_CATEGORIE_PERSONNEL, CODE_TYPE_DIPLOME_ACAD
)
SELECT DISTINCT
    s.CODE_CENTRE_DELEGATION,
    s.CODE_TYPE_ANNEE,
    255, 255,
    s.CODE_TYPE_DIPL_ACAD_CATEGORIE,
    255, 255, 255,
    255, 255, 255,
    255, 255, 255
FROM [BASE_SIGE_MINJEC].[dbo].[FORMATEURS_DIPLOME_ACAD] s
WHERE NOT EXISTS (
    SELECT 1 FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_SPECIALITE,255) = 255
      AND ISNULL(d.CODE_TYPE_AGE,255) = 255
      AND ISNULL(d.CODE_TYPE_DIPL_ACAD_CATEGORIE,255) = ISNULL(s.CODE_TYPE_DIPL_ACAD_CATEGORIE,255)
      AND ISNULL(d.CODE_TYPE_DIPL_PRO_CATEGORIE,255) = 255
      AND ISNULL(d.CODE_TYPE_FONCTION,255) = 255
      AND ISNULL(d.CODE_TYPE_POSITION,255) = 255
      AND ISNULL(d.CODE_TYPE_GRADE,255) = 255
      AND ISNULL(d.CODE_TYPE_STATUT_MATRIMONIALE,255) = 255
      AND ISNULL(d.CODE_TYPE_STATUT_PERS,255) = 255
);

INSERT INTO EFFECTIFS_FORMATEURS (CODE_DIMENSION_FORMATEUR, CODE_TYPE_EFFECTIFS_FORMATEURS, CODE_PERSONNEL_DETAILS, NB_FORM_G, NB_FORM_F, NB_FORM_T, ESTIMATION)
SELECT d.CODE_DIMENSION_FORMATEUR, 3, NULL,
       COALESCE(s.NB_FORMATEURS_DIPL_ACAD_H,0),
       COALESCE(s.NB_FORMATEURS_DIPL_ACAD_F,0),
       COALESCE(s.NB_FORMATEURS_DIPL_ACAD_T, COALESCE(s.NB_FORMATEURS_DIPL_ACAD_H,0)+COALESCE(s.NB_FORMATEURS_DIPL_ACAD_F,0)),
       CAST(0 AS TINYINT)
FROM [BASE_SIGE_MINJEC].[dbo].[FORMATEURS_DIPLOME_ACAD] s
CROSS APPLY (
    SELECT CODE_DIMENSION_FORMATEUR FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_DIPL_ACAD_CATEGORIE,255) = ISNULL(s.CODE_TYPE_DIPL_ACAD_CATEGORIE,255)
) d;

-- 4) FORMATEURS_DIPLOME_PRO
INSERT INTO DIMENSION_FORMATEUR (
    CODE_CENTRE_DELEGATION, CODE_TYPE_ANNEE,
    CODE_TYPE_SPECIALITE, CODE_TYPE_AGE, CODE_TYPE_DIPL_ACAD_CATEGORIE,
    CODE_TYPE_DIPL_PRO_CATEGORIE, CODE_TYPE_FONCTION, CODE_TYPE_POSITION,
    CODE_TYPE_GRADE, CODE_TYPE_STATUT_MATRIMONIALE, CODE_TYPE_STATUT_PERS,
    CODE_TYPE_PERSONNEL, CODE_TYPE_CATEGORIE_PERSONNEL, CODE_TYPE_DIPLOME_ACAD
)
SELECT DISTINCT
    s.CODE_CENTRE_DELEGATION,
    s.CODE_TYPE_ANNEE,
    255, 255, 255,
    s.CODE_TYPE_DIPL_PRO_CATEGORIE,
    255, 255, 255,
    255, 255, 255,
    255, 255
FROM [BASE_SIGE_MINJEC].[dbo].[FORMATEURS_DIPLOME_PRO] s
WHERE NOT EXISTS (
    SELECT 1 FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_SPECIALITE,255) = 255
      AND ISNULL(d.CODE_TYPE_AGE,255) = 255
      AND ISNULL(d.CODE_TYPE_DIPL_ACAD_CATEGORIE,255) = 255
      AND ISNULL(d.CODE_TYPE_DIPL_PRO_CATEGORIE,255) = ISNULL(s.CODE_TYPE_DIPL_PRO_CATEGORIE,255)
      AND ISNULL(d.CODE_TYPE_FONCTION,255) = 255
      AND ISNULL(d.CODE_TYPE_POSITION,255) = 255
      AND ISNULL(d.CODE_TYPE_GRADE,255) = 255
      AND ISNULL(d.CODE_TYPE_STATUT_MATRIMONIALE,255) = 255
      AND ISNULL(d.CODE_TYPE_STATUT_PERS,255) = 255
);

INSERT INTO EFFECTIFS_FORMATEURS (CODE_DIMENSION_FORMATEUR, CODE_TYPE_EFFECTIFS_FORMATEURS, CODE_PERSONNEL_DETAILS, NB_FORM_G, NB_FORM_F, NB_FORM_T, ESTIMATION)
SELECT d.CODE_DIMENSION_FORMATEUR, 4, NULL,
       COALESCE(s.NB_FORMATEURS_DIPL_PRO_H,0),
       COALESCE(s.NB_FORMATEURS_DIPL_PRO_F,0),
       COALESCE(s.NB_FORMATEURS_DIPL_PRO_T, COALESCE(s.NB_FORMATEURS_DIPL_PRO_H,0)+COALESCE(s.NB_FORMATEURS_DIPL_PRO_F,0)),
       CAST(0 AS TINYINT)
FROM [BASE_SIGE_MINJEC].[dbo].[FORMATEURS_DIPLOME_PRO] s
CROSS APPLY (
    SELECT CODE_DIMENSION_FORMATEUR FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_DIPL_PRO_CATEGORIE,255) = ISNULL(s.CODE_TYPE_DIPL_PRO_CATEGORIE,255)
) d;

-- 5) PERSONNEL_CENTRE_DELEGATION (granularité individuelle → 1 ligne = 1 personne)
-- D'abord, insérer les dimensions
INSERT INTO DIMENSION_FORMATEUR (
    CODE_CENTRE_DELEGATION, CODE_TYPE_ANNEE,
    CODE_TYPE_SPECIALITE, CODE_TYPE_AGE,
    CODE_TYPE_DIPL_ACAD_CATEGORIE, CODE_TYPE_DIPL_PRO_CATEGORIE,
    CODE_TYPE_FONCTION, CODE_TYPE_POSITION,
    CODE_TYPE_GRADE, CODE_TYPE_STATUT_MATRIMONIALE, CODE_TYPE_STATUT_PERS,
    CODE_TYPE_PERSONNEL, CODE_TYPE_CATEGORIE_PERSONNEL, CODE_TYPE_DIPLOME_ACAD
)
SELECT DISTINCT
    s.CODE_CENTRE_DELEGATION,
    s.CODE_TYPE_ANNEE,
    ISNULL(s.CODE_TYPE_SPECIALITE,255),
    ISNULL(s.AGE,255),
    ISNULL(s.CODE_TYPE_DIPL_ACAD_CATEGORIE,255),
    ISNULL(s.CODE_TYPE_DIPLOME_PRO,255),
    ISNULL(s.CODE_TYPE_FONCTION,255),
    ISNULL(s.CODE_TYPE_POSITION,255),
    ISNULL(s.CODE_TYPE_GRADE,255),
    ISNULL(s.CODE_TYPE_STATUT_MATRIMONIALE,255),
    ISNULL(s.CODE_TYPE_STATUT_PERS,255),
    ISNULL(s.CODE_TYPE_PERSONNEL,255),
    ISNULL(s.CODE_TYPE_CATEGORIE_PERSONNEL,255),
    ISNULL(s.CODE_TYPE_DIPLOME_ACAD,255)
FROM [BASE_SIGE_MINJEC].[dbo].[PERSONNEL_CENTRE_DELEGATION] s
WHERE NOT EXISTS (
    SELECT 1 FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_SPECIALITE,255) = ISNULL(s.CODE_TYPE_SPECIALITE,255)
      AND ISNULL(d.CODE_TYPE_AGE,255) = ISNULL(s.AGE,255)
      AND ISNULL(d.CODE_TYPE_DIPL_ACAD_CATEGORIE,255) = ISNULL(s.CODE_TYPE_DIPL_ACAD_CATEGORIE,255)
      AND ISNULL(d.CODE_TYPE_DIPL_PRO_CATEGORIE,255) = ISNULL(s.CODE_TYPE_DIPLOME_PRO,255)
      AND ISNULL(d.CODE_TYPE_FONCTION,255) = ISNULL(s.CODE_TYPE_FONCTION,255)
      AND ISNULL(d.CODE_TYPE_POSITION,255) = ISNULL(s.CODE_TYPE_POSITION,255)
      AND ISNULL(d.CODE_TYPE_GRADE,255) = ISNULL(s.CODE_TYPE_GRADE,255)
      AND ISNULL(d.CODE_TYPE_STATUT_MATRIMONIALE,255) = ISNULL(s.CODE_TYPE_STATUT_MATRIMONIALE,255)
      AND ISNULL(d.CODE_TYPE_STATUT_PERS,255) = ISNULL(s.CODE_TYPE_STATUT_PERS,255)
);

-- Ensuite, insérer les détails individuels
INSERT INTO PERSONNEL_DETAILS (
    CODE_PERSONNEL_DETAILS, ID_PERSONNEL, MATRICULE_PERSONNEL, NOM_PERSONNEL, PRENOMS_PERSONNEL, 
    DATE_OU_ANNEE_NAISS_PERS, ARRONDISSEMENT_ORIGINE, TELEPHONE_PERS, 
    ANNEE_1ERE_PRISE_SERVICE, EFP_OU_DATE_RECRUTEMENT, ANNEE_AFFECTATION, 
    NUM_ORDRE_PERS, CATEGORIE_PERS, FORMATEUR_Y_N, ANCIENNETE_POSTE, 
    ENTREE_FONCTION_PUBLIQUE, POSTE_RESPONSABILITE_Y_N, AUTRE_FONCTION, 
    AUTRE_GRADE, DISCIPLINE_ENSEIGNEE, AUTRE_DIPLOME_PRO, AUTRE_DIPLOME_ACAD, FONCTION
)
SELECT DISTINCT
    HASHBYTES('SHA2_256', CONCAT(
        s.CODE_CENTRE_DELEGATION, '|',
        s.CODE_TYPE_ANNEE, '|',
        s.CODE_TYPE_SPECIALITE, '|',
        ISNULL(s.AGE, 255), '|',
        ISNULL(s.CODE_TYPE_DIPL_ACAD_CATEGORIE, 255), '|',
        ISNULL(s.CODE_TYPE_DIPLOME_PRO, 255), '|',
        ISNULL(s.CODE_TYPE_FONCTION, 255), '|',
        ISNULL(s.CODE_TYPE_POSITION, 255), '|',
        ISNULL(s.CODE_TYPE_GRADE, 255), '|',
        ISNULL(s.CODE_TYPE_STATUT_MATRIMONIALE, 255), '|',
        ISNULL(s.CODE_TYPE_STATUT_PERS, 255), '|',
        ISNULL(s.ID_PERSONNEL, 255)
    )) AS CODE_PERSONNEL_DETAILS,
    s.ID_PERSONNEL, 
    s.MATRICULE_PERSONNEL, s.NOM_PERSONNEL, s.PRENOMS_PERSONNEL, 
    s.DATE_OU_ANNEE_NAISS_PERS, s.ARRONDISSEMENT_ORIGINE, s.TELEPHONE_PERS, 
    s.ANNEE_1ERE_PRISE_SERVICE, s.EFP_OU_DATE_RECRUTEMENT, s.ANNEE_AFFECTATION, 
    s.NUM_ORDRE_PERS, s.CATEGORIE_PERS, s.FORMATEUR_Y_N, s.ANCIENNETE_POSTE, 
    s.ENTREE_FONCTION_PUBLIQUE, s.POSTE_RESPONSABILITE_Y_N, s.AUTRE_FONCTION, 
    s.AUTRE_GRADE, s.DISCIPLINE_ENSEIGNEE, s.AUTRE_DIPLOME_PRO, s.AUTRE_DIPLOME_ACAD, s.FONCTION
FROM [BASE_SIGE_MINJEC].[dbo].[PERSONNEL_CENTRE_DELEGATION] s

-- Insertion effectifs: 1 par personne, répartition H/F selon CODE_TYPE_SEXE (1=H,2=F)
INSERT INTO EFFECTIFS_FORMATEURS (CODE_DIMENSION_FORMATEUR, CODE_TYPE_EFFECTIFS_FORMATEURS, CODE_PERSONNEL_DETAILS, NB_FORM_G, NB_FORM_F, NB_FORM_T, ESTIMATION)
SELECT d.CODE_DIMENSION_FORMATEUR, 5, pd.CODE_PERSONNEL_DETAILS,
       CASE WHEN s.CODE_TYPE_SEXE = 1 THEN 1 ELSE 0 END,
       CASE WHEN s.CODE_TYPE_SEXE = 2 THEN 1 ELSE 0 END,
       1,
       CAST(ISNULL(s.ESTIMATION,0) AS TINYINT)
FROM [BASE_SIGE_MINJEC].[dbo].[PERSONNEL_CENTRE_DELEGATION] s
INNER JOIN PERSONNEL_DETAILS pd ON (
    pd.CODE_PERSONNEL_DETAILS = HASHBYTES('SHA2_256', CONCAT(
        s.CODE_CENTRE_DELEGATION, '|',
        s.CODE_TYPE_ANNEE, '|',
        s.CODE_TYPE_SPECIALITE, '|',
        ISNULL(s.AGE, 255), '|',
        ISNULL(s.CODE_TYPE_DIPL_ACAD_CATEGORIE, 255), '|',
        ISNULL(s.CODE_TYPE_DIPLOME_PRO, 255), '|',
        ISNULL(s.CODE_TYPE_FONCTION, 255), '|',
        ISNULL(s.CODE_TYPE_POSITION, 255), '|',
        ISNULL(s.CODE_TYPE_GRADE, 255), '|',
        ISNULL(s.CODE_TYPE_STATUT_MATRIMONIALE, 255), '|',
        ISNULL(s.CODE_TYPE_STATUT_PERS, 255), '|',
        ISNULL(s.ID_PERSONNEL, 255)
    ))
)
CROSS APPLY (
    SELECT d.CODE_DIMENSION_FORMATEUR 
    FROM DIMENSION_FORMATEUR d
    WHERE d.CODE_CENTRE_DELEGATION = s.CODE_CENTRE_DELEGATION
      AND d.CODE_TYPE_ANNEE = s.CODE_TYPE_ANNEE
      AND ISNULL(d.CODE_TYPE_SPECIALITE,255) = ISNULL(s.CODE_TYPE_SPECIALITE,255)
      AND ISNULL(d.CODE_TYPE_AGE,255) = ISNULL(s.AGE,255)
      AND ISNULL(d.CODE_TYPE_DIPL_ACAD_CATEGORIE,255) = ISNULL(s.CODE_TYPE_DIPL_ACAD_CATEGORIE,255)
      AND ISNULL(d.CODE_TYPE_DIPL_PRO_CATEGORIE,255) = ISNULL(s.CODE_TYPE_DIPLOME_PRO,255)
      AND ISNULL(d.CODE_TYPE_FONCTION,255) = ISNULL(s.CODE_TYPE_FONCTION,255)
      AND ISNULL(d.CODE_TYPE_POSITION,255) = ISNULL(s.CODE_TYPE_POSITION,255)
      AND ISNULL(d.CODE_TYPE_GRADE,255) = ISNULL(s.CODE_TYPE_GRADE,255)
      AND ISNULL(d.CODE_TYPE_STATUT_MATRIMONIALE,255) = ISNULL(s.CODE_TYPE_STATUT_MATRIMONIALE,255)
      AND ISNULL(d.CODE_TYPE_STATUT_PERS,255) = ISNULL(s.CODE_TYPE_STATUT_PERS,255)
      AND ISNULL(d.CODE_TYPE_PERSONNEL,255) = ISNULL(s.CODE_TYPE_PERSONNEL,255)
      AND ISNULL(d.CODE_TYPE_CATEGORIE_PERSONNEL,255) = ISNULL(s.CODE_TYPE_CATEGORIE_PERSONNEL,255)
      AND ISNULL(d.CODE_TYPE_DIPLOME_ACAD,255) = ISNULL(s.CODE_TYPE_DIPLOME_ACAD,255)
) d;
